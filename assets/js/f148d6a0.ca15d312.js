"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[401],{5834:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-reference/order-connector/order-api-add-per-unit-line-item","title":"Add Per-Unit Line Item","description":"Add a line item priced by unit and quantity.","source":"@site/versioned_docs/version-0.1.5/api-reference/order-connector/add-per-unit-line-item.md","sourceDirName":"api-reference/order-connector","slug":"/api-reference/order-connector/order-api-add-per-unit-line-item","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/order-connector/order-api-add-per-unit-line-item","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":5,"frontMatter":{"id":"order-api-add-per-unit-line-item","sidebar_position":5,"title":"Add Per-Unit Line Item","description":"Add a line item priced by unit and quantity.","hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"Add Fixed-Price Line Item","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/order-connector/order-api-add-fixed-price-line-item"},"next":{"title":"Add Fixed-Price Line Items","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/order-connector/order-api-add-fixed-price-line-items"}}');var t=n(4848),d=n(8453);const o={id:"order-api-add-per-unit-line-item",sidebar_position:5,title:"Add Per-Unit Line Item",description:"Add a line item priced by unit and quantity.",hide_title:!0},s=void 0,a={},l=[{value:"Add Per-Unit Line Item",id:"add-per-unit-line-item",level:2},{value:"Signature:",id:"signature",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Error Handling:",id:"error-handling",level:4},{value:"Example Usage:",id:"example-usage",level:3},{value:"Best Practice with Repository Pattern::",id:"best-practice-with-repository-pattern",level:3}];function c(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"add-per-unit-line-item",children:"Add Per-Unit Line Item"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Purpose:"})," Add an item using quantity (e.g., weight/units) where pricing is determined by the catalog\u2019s unit price."]}),"\n",(0,t.jsx)(r.h3,{id:"signature",children:"Signature:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:"fun addPerUnitLineItem(\r\n    orderId: String,\r\n    itemId: String,\r\n    quantity: Double,\r\n    devNotes: Map<String, String>?,\r\n    binName: String?\r\n): LineItem?\n"})}),"\n",(0,t.jsx)(r.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"orderId"})," (String): Unique ",(0,t.jsx)(r.strong,{children:"UUID"})," identifier of the ",(0,t.jsx)(r.a,{href:"../models/models-order#order",children:(0,t.jsx)(r.code,{children:"Order"})}),"."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"itemId"})," (String): Unique ",(0,t.jsx)(r.strong,{children:"UUID"})," identifier of the inventory ",(0,t.jsx)(r.a,{href:"../models/models-inventory#item",children:(0,t.jsx)(r.code,{children:"Item"})}),"."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"quantity"})," (Double): Number of units."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"devNotes"})," (Map(String, String)?, optional): Free-form metadata."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"binName"})," (String?): Optional, A specific identifier for categorizing items in an order. This is the general name of a specific group of items, united by some logic."]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"returns",children:"Returns:"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"LineItem?"}),": The created ",(0,t.jsx)(r.a,{href:"../models/models-order#lineitem",children:(0,t.jsx)(r.code,{children:"LineItem"})}),", or ",(0,t.jsx)(r.code,{children:"null"})," if the operation fails."]}),"\n",(0,t.jsx)(r.h4,{id:"error-handling",children:"Error Handling:"}),"\n",(0,t.jsxs)(r.p,{children:["Returns ",(0,t.jsx)(r.code,{children:"null"})," on error."]}),"\n",(0,t.jsx)(r.h3,{id:"example-usage",children:"Example Usage:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:'private fun addWeightedItem(orderId: String, itemId: String, qtyKg: Double) {\r\n    lifecycleScope.launch(Dispatchers.IO) {\r\n        val lineItem = orderConnector.addPerUnitLineItem(\r\n            orderId = orderId,\r\n            itemId = itemId,\r\n            quantity = qtyKg,\r\n            devNotes = null,\r\n            binName = null\r\n        )\r\n        withContext(Dispatchers.Main) {\r\n            lineItem?.let(::onLineItemAdded) ?: showError("Failed to add per-unit item")\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.h3,{id:"best-practice-with-repository-pattern",children:"Best Practice with Repository Pattern::"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:"interface OrderRepository {\r\n    fun addPerUnitLineItem(\r\n       orderId: String,\r\n       itemId: String,\r\n       quantity: Double,\r\n       devNotes: Map<String, String>?,\r\n       binName: String?\r\n    ): LineItem?\r\n}\r\n\r\nclass OrderRepositoryImpl(\r\n    private val orderConnector: OrderConnector\r\n) : OrderRepository {\r\n    override suspend fun addPerUnitLineItem(\r\n       orderId: String,\r\n       itemId: String,\r\n       quantity: Double,\r\n       devNotes: Map<String, String>?,\r\n       binName: String?\r\n    ): LineItem? = try {\r\n        orderConnector.addPerUnitLineItem(orderId, itemId, quantity, devNotes, binName)\r\n    } catch (_: Exception) { null }\r\n}\n"})})]})}function u(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>s});var i=n(6540);const t={},d=i.createContext(t);function o(e){const r=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(d.Provider,{value:r},e.children)}}}]);