"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[1599],{1028:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api-reference/action-connector/action-api-introduction","title":"Introduction","description":"Introduction to ActionConnector.","source":"@site/versioned_docs/version-0.1.5/api-reference/action-connector/intro.md","sourceDirName":"api-reference/action-connector","slug":"/api-reference/action-connector/action-api-introduction","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/action-connector/action-api-introduction","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":1,"frontMatter":{"id":"action-api-introduction","sidebar_position":1,"title":"Introduction","description":"Introduction to ActionConnector.","hide_title":true,"pagination_prev":null},"sidebar":"tutorialSidebar","next":{"title":"Create Action","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/action-connector/action-api-create-action"}}');var o=t(4848),r=t(8453);const c={id:"action-api-introduction",sidebar_position:1,title:"Introduction",description:"Introduction to ActionConnector.",hide_title:!0,pagination_prev:null},a=void 0,s={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Integration Steps",id:"integration-steps",level:3},{value:"Create and Register an Activity",id:"create-and-register-an-activity",level:4},{value:"Implement Logic",id:"implement-logic",level:4},{value:"Creating Action Buttons with the SDK",id:"creating-action-buttons-with-the-sdk",level:4},{value:"ActionConnector Methods:",id:"actionconnector-methods",level:3}];function l(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"ActionConnector"})," provides methods for managing **action buttons in the CorePOS system.\r\nAn ",(0,o.jsx)(e.a,{href:"../models/models-action#action",children:(0,o.jsx)(e.code,{children:"Action"})})," represents a custom button that appears on the CorePOS home screen.\r\nThese buttons allow third-party applications to launch their own logic when pressed.\r\nUnlike ",(0,o.jsx)(e.strong,{children:"Tender Buttons, Action Buttons are one-way triggers"})," \u2014 they do ",(0,o.jsx)(e.strong,{children:"not"})," return data back to CorePOS."]}),"\n",(0,o.jsx)(e.h3,{id:"integration-steps",children:"Integration Steps"}),"\n",(0,o.jsx)(e.h4,{id:"create-and-register-an-activity",children:"Create and Register an Activity"}),"\n",(0,o.jsxs)(e.p,{children:["Create an ",(0,o.jsx)(e.code,{children:"Activity"})," in your app that will handle the custom logic. Register it in ",(0,o.jsx)(e.strong,{children:"AndroidManifest.xml"})," with the required intent filter:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-xml",children:'<activity android:name=".YourActionActivity">\r\n    <intent-filter>\r\n        <action android:name="com.corepos.intent.action.MERCHANT_ACTION" />\r\n        <category android:name="android.intent.category.DEFAULT" />\r\n    </intent-filter>\r\n</activity>\n'})}),"\n",(0,o.jsx)(e.h4,{id:"implement-logic",children:"Implement Logic"}),"\n",(0,o.jsxs)(e.p,{children:["Inside ",(0,o.jsx)(e.code,{children:"YourActionActivity"}),", implement the specific logic that should run when the action button is pressed.\r\nNo result data needs to be sent back to CorePOS \u2014 the action ends inside your app."]}),"\n",(0,o.jsx)(e.h4,{id:"creating-action-buttons-with-the-sdk",children:"Creating Action Buttons with the SDK"}),"\n",(0,o.jsxs)(e.p,{children:["After setting up your third-party app, you can create the corresponding action button in CorePOS using the ",(0,o.jsx)(e.code,{children:"ActionConnector"})," API."]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Initialization"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-kotlin",children:"val actionConnector = ActionConnector(context)\n"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"Example: Create Action"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-kotlin",children:'val action = actionConnector.createAction(\r\n    actionName = "My Custom Action",\r\n    packageName = context.packageName,\r\n    enabled = true)\n'})}),"\n",(0,o.jsx)(e.h3,{id:"actionconnector-methods",children:"ActionConnector Methods:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"action-api-create-action",children:(0,o.jsx)(e.code,{children:"Create Action"})})," - Creates a custom action button."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"action-api-get-actions",children:(0,o.jsx)(e.code,{children:"Get Actions"})})," - Retrieves a list of available actions for a given package name."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"action-api-update-action",children:(0,o.jsx)(e.code,{children:"Update Action"})})," - Updates an existing action's configuration."]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function c(n){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:c(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);