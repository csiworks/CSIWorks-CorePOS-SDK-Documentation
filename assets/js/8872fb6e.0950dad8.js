"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[5971],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(6540);const r={},d=i.createContext(r);function l(e){const n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(d.Provider,{value:n},e.children)}},9380:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"api-reference/models/models-payment","title":"Payment","description":"Payment models.","source":"@site/versioned_docs/version-0.1.5/api-reference/models/payment.md","sourceDirName":"api-reference/models","slug":"/api-reference/models/models-payment","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/models/models-payment","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":6,"frontMatter":{"id":"models-payment","sidebar_position":6,"title":"Payment","description":"Payment models.","hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"Exception","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/models/models-exception"},"next":{"title":"Intents","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/models/models-intents"}}');var r=s(4848),d=s(8453);const l={id:"models-payment",sidebar_position:6,title:"Payment",description:"Payment models.",hide_title:!0},t=void 0,c={},a=[{value:"Payment Models",id:"payment-models",level:2},{value:"TenderType Enum",id:"tendertype-enum",level:2},{value:"Values",id:"values",level:3},{value:"Static Functions",id:"static-functions",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Card",id:"card",level:2},{value:"Values",id:"values-1",level:3},{value:"PaymentRequest",id:"paymentrequest",level:2},{value:"Values",id:"values-2",level:3},{value:"PaymentResponse",id:"paymentresponse",level:2},{value:"Values",id:"values-3",level:3},{value:"PaymentRequestBuilder",id:"paymentrequestbuilder",level:2},{value:"Factory Methods",id:"factory-methods",level:3},{value:"Builder Methods",id:"builder-methods",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"payment-models",children:"Payment Models"}),"\n",(0,r.jsx)(n.p,{children:"This section covers all payment models (entities) used in the API"}),"\n",(0,r.jsx)(n.h2,{id:"tendertype-enum",children:"TenderType Enum"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"enum class TenderType\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"TenderType"})," enum defines the different types of payment methods available:"]}),"\n",(0,r.jsx)(n.h3,{id:"values",children:"Values"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CREDIT (0)"}),": Credit card payment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DEBIT (1)"}),": Debit card payment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CASH (2)"}),": Cash payment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EBT (3)"}),": Electronic Benefit Transfer card payment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CHECK (4)"}),": Check payment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GIFT (5)"}),": Gift card payment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"LOYALTY (6)"}),": Loyalty card payment."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"static-functions",children:"Static Functions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"infix fun from(code: Int): TenderType?\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns the TenderType enum value corresponding to the provided code."}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"code: Int"})," - The integer code representing the tender type"]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"TenderType?"})," - The corresponding TenderType enum value, or null if the code is invalid"]}),"\n",(0,r.jsx)(n.h2,{id:"card",children:"Card"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"data class Card\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Card"})," model represents payment card information, containing the following fields:"]}),"\n",(0,r.jsx)(n.h3,{id:"values-1",children:"Values"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cardNumber"}),": The card number."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"expDate"}),": The expiration date of the card."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cvv"}),": The card verification value."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"firstName"}),": The cardholder's first name."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lastName"}),": The cardholder's last name."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"country"}),": The billing country."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"state"}),": The billing state."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"city"}),": The billing city."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"zipCode"}),": The billing ZIP code."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"paymentrequest",children:"PaymentRequest"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"data class PaymentRequest\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"Not Currently Functional",type:"caution",children:(0,r.jsx)(n.p,{children:"This model is not currently in use and may not be functional in the current version."})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"PaymentRequest"})," model represents a payment transaction request, containing the following fields:"]}),"\n",(0,r.jsx)(n.h3,{id:"values-2",children:"Values"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"}),": A unique identifier for the payment request (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tenderType"}),": The type of payment method from ",(0,r.jsx)(n.a,{href:"#tendertype-enum",children:(0,r.jsx)(n.strong,{children:"TenderType"})}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"amount"}),": The payment amount in smallest currency unit (e.g., cents)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"taxAmount"}),": The tax portion of the payment (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tipsAmount"}),": The tip amount in smallest currency unit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"card"}),": The payment card information (required for card payments)."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"paymentresponse",children:"PaymentResponse"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"data class PaymentResponse\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"PaymentResponse"})," model represents the result of a payment transaction, containing the following fields:"]}),"\n",(0,r.jsx)(n.h3,{id:"values-3",children:"Values"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"response"}),": The response message or data from the payment processing."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"paymentrequestbuilder",children:"PaymentRequestBuilder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"class PaymentRequestBuilder\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"Not Currently Functional",type:"caution",children:(0,r.jsx)(n.p,{children:"This builder is not currently in use and may not be functional in the current version."})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"PaymentRequestBuilder"})," class provides a fluent interface for creating ",(0,r.jsx)(n.code,{children:"PaymentRequest"})," objects with validation and utility methods."]}),"\n",(0,r.jsx)(n.h3,{id:"factory-methods",children:"Factory Methods"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"create()"})," - Creates a new empty builder instance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"creditCard()"})," - Creates a credit card payment builder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"debitCard()"})," - Creates a debit card payment builder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cash()"})," - Creates a cash payment builder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ebt()"})," - Creates an EBT payment builder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"check()"})," - Creates a check payment builder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"giftCard()"})," - Creates a gift card payment builder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"loyaltyCard()"})," - Creates a loyalty card payment builder"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"builder-methods",children:"Builder Methods"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Basic Setters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setTenderType(TenderType)"})," - Set payment method type"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setAmount(Long)"})," - Set payment amount in cents"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setTaxAmount(Long?)"})," - Set tax amount in cents"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setTipsAmount(Long)"})," - Set tip amount in cents"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setCard(Card?)"})," - Set card information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setCard(cardNumber, expDate, cvv, firstName, lastName, country, state, city, zipCode)"})," - Set card info with individual parameters"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Build Methods:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"build()"})," - Build and validate PaymentRequest (throws on error)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"buildOrNull()"})," - Build PaymentRequest, return null on error"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isValid()"})," - Check if current state is valid"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getValidationErrors()"})," - Get list of validation errors"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);