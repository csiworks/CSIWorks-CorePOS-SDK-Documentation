"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[3010],{4939:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-reference/inventory-connector/inventory-api-introduction","title":"Introduction","description":"Introduction of InventoryConnector.","source":"@site/versioned_docs/version-0.1.5/api-reference/inventory-connector/intro.md","sourceDirName":"api-reference/inventory-connector","slug":"/api-reference/inventory-connector/inventory-api-introduction","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-introduction","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":1,"frontMatter":{"id":"inventory-api-introduction","sidebar_position":1,"title":"Introduction","description":"Introduction of InventoryConnector.","hide_title":true,"pagination_prev":null},"sidebar":"tutorialSidebar","next":{"title":"Get Item","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-get-item"}}');var r=t(4848),o=t(8453);const s={id:"inventory-api-introduction",sidebar_position:1,title:"Introduction",description:"Introduction of InventoryConnector.",hide_title:!0,pagination_prev:null},a=void 0,c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Class Overview",id:"class-overview",level:3},{value:"Initialization:",id:"initialization",level:3},{value:"Methods:",id:"methods",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.h3,{id:"class-overview",children:"Class Overview"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"class InventoryConnector(context: Context)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"InventoryConnector"})," provides methods to manage inventory items, categories, and related operations in the CorePOS system. All methods are executed asynchronously and return results through callbacks."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose:"})," Manages inventory operations including retrieving, creating, updating, and deleting items and categories.\r\n",(0,r.jsx)(n.a,{href:"../../quick-start/quick-guide-examples#retrieve-inventory-items",children:(0,r.jsx)(n.code,{children:"Quick Example:"})})," - Quick example of retrieve inventory items"]}),"\n",(0,r.jsx)(n.h3,{id:"initialization",children:"Initialization:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"val inventoryConnector = InventoryConnector(context)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"methods",children:"Methods:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-get-item",children:(0,r.jsx)(n.code,{children:"Get Item"})})," - Retrieves a single inventory item by its ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-get-items",children:(0,r.jsx)(n.code,{children:"Get Items"})})," - Retrieves a list of items."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-save-item",children:(0,r.jsx)(n.code,{children:"Save Item"})})," - Creates a new inventory item or updates an existing one."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-delete-item",children:(0,r.jsx)(n.code,{children:"Delete Item"})})," - Removes an inventory item from the system."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-get-categories",children:(0,r.jsx)(n.code,{children:"Get Categories"})})," - Retrieves all available inventory categories."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-get-charges",children:(0,r.jsx)(n.code,{children:"Get Charges"})})," - Retrieves all available charges (taxes and fees)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-save-charge",children:(0,r.jsx)(n.code,{children:"Save Charge"})})," - Creates a new charge or updates an existing one."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-delete-charge",children:(0,r.jsx)(n.code,{children:"Delete Charge"})})," - Removes a charge from the system."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-save-category",children:(0,r.jsx)(n.code,{children:"Save Category"})})," - Creates a new category or updates an existing one."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-delete-category",children:(0,r.jsx)(n.code,{children:"Delete Category"})})," - Removes a category from the system."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-update-item-stock-quantity",children:(0,r.jsx)(n.code,{children:"Update Item Stock Quantity"})})," - Updates the stock quantity for an item."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-get-dual-price-rate",children:(0,r.jsx)(n.code,{children:"Get Dual Price Rate"})})," - Retrieves the current dual pricing rate."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"inventory-api-update-ebt-flags",children:(0,r.jsx)(n.code,{children:"Update EBT Flags"})})," - Updates EBT eligibility flags for multiple items."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);