"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[3646],{8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>s});var i=n(6540);const t={},o=i.createContext(t);function d(e){const r=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(o.Provider,{value:r},e.children)}},8644:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-reference/order-connector/order-api-delete-line-item-discount","title":"Delete Line Item Discount","description":"Remove a specific discount from a line item in an order.","source":"@site/versioned_docs/version-0.1.5/api-reference/order-connector/delete-line-item-discount.md","sourceDirName":"api-reference/order-connector","slug":"/api-reference/order-connector/order-api-delete-line-item-discount","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/order-connector/order-api-delete-line-item-discount","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":8,"frontMatter":{"id":"order-api-delete-line-item-discount","sidebar_position":8,"title":"Delete Line Item Discount","description":"Remove a specific discount from a line item in an order.","hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"Delete Line Items","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/order-connector/order-api-delete-line-items"},"next":{"title":"Update Line Item","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/order-connector/order-api-update-line-item"}}');var t=n(4848),o=n(8453);const d={id:"order-api-delete-line-item-discount",sidebar_position:8,title:"Delete Line Item Discount",description:"Remove a specific discount from a line item in an order.",hide_title:!0},s=void 0,c={},l=[{value:"Delete Line Item Discount",id:"delete-line-item-discount",level:2},{value:"Signature:",id:"signature",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Error Handling:",id:"error-handling",level:4},{value:"Example Usage:",id:"example-usage",level:3},{value:"Best Practice with Repository Pattern:",id:"best-practice-with-repository-pattern",level:3}];function a(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"delete-line-item-discount",children:"Delete Line Item Discount"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Purpose:"})," Remove a specific discount from a line item within an order."]}),"\n",(0,t.jsx)(r.h3,{id:"signature",children:"Signature:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:"fun deleteLineItemDiscount(\r\n    orderId: String,\r\n    lineItemId: String,\r\n    discountId: String\r\n): Order?\n"})}),"\n",(0,t.jsx)(r.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"orderId"})," (String): Unique ",(0,t.jsx)(r.strong,{children:"UUID"})," identifier of the ",(0,t.jsx)(r.a,{href:"../models/models-order#order",children:(0,t.jsx)(r.code,{children:"Order"})}),"."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"lineItemId"})," (String): Unique ",(0,t.jsx)(r.strong,{children:"UUID"})," identifier of the ",(0,t.jsx)(r.a,{href:"../models/models-order#lineitem",children:(0,t.jsx)(r.code,{children:"LineItem"})}),"."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"discountId"})," (String): Unique ",(0,t.jsx)(r.strong,{children:"UUID"})," identifier of the discount to remove."]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"returns",children:"Returns:"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"Order?"}),": The updated ",(0,t.jsx)(r.a,{href:"../models/models-order#order",children:(0,t.jsx)(r.code,{children:"Order"})})," with the discount removed, or ",(0,t.jsx)(r.code,{children:"null"})," if the operation fails."]}),"\n",(0,t.jsx)(r.h4,{id:"error-handling",children:"Error Handling:"}),"\n",(0,t.jsxs)(r.p,{children:["Returns ",(0,t.jsx)(r.code,{children:"null"})," on error."]}),"\n",(0,t.jsx)(r.h3,{id:"example-usage",children:"Example Usage:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:'private fun removeLineItemDiscount(orderId: String, lineItemId: String, discountId: String) {\r\n    lifecycleScope.launch(Dispatchers.IO) {\r\n        val updatedOrder = orderConnector.deleteLineItemDiscount(\r\n            orderId = orderId,\r\n            lineItemId = lineItemId,\r\n            discountId = discountId\r\n        )\r\n        withContext(Dispatchers.Main) {\r\n            updatedOrder?.let(::onOrderUpdated) ?: showError("Failed to remove discount")\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.h3,{id:"best-practice-with-repository-pattern",children:"Best Practice with Repository Pattern:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:"interface OrderRepository {\r\n    suspend fun deleteLineItemDiscount(\r\n        orderId: String,\r\n        lineItemId: String,\r\n        discountId: String\r\n    ): Order?\r\n}\r\n\r\nclass OrderRepositoryImpl(\r\n    private val orderConnector: OrderConnector\r\n) : OrderRepository {\r\n    override suspend fun deleteLineItemDiscount(\r\n        orderId: String,\r\n        lineItemId: String,\r\n        discountId: String\r\n    ): Order? = try {\r\n        orderConnector.deleteLineItemDiscount(orderId, lineItemId, discountId)\r\n    } catch (_: Exception) { null }\r\n}\n"})})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);