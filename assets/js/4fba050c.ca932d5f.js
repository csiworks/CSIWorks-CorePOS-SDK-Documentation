"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[9224],{2895:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-reference/printer-api","title":"PrinterConnector","description":"How to utilize all PrinterConnector functionality.","source":"@site/versioned_docs/version-0.1.5/api-reference/printer-connector.md","sourceDirName":"api-reference","slug":"/api-reference/printer-api","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/printer-api","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":5,"frontMatter":{"id":"printer-api","sidebar_position":5,"title":"PrinterConnector","description":"How to utilize all PrinterConnector functionality.","hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"Update Action","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/action-connector/action-api-update-action"},"next":{"title":"MerchantConnector","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/merchant-api"}}');var t=r(4848),o=r(8453);const a={id:"printer-api",sidebar_position:5,title:"PrinterConnector",description:"How to utilize all PrinterConnector functionality.",hide_title:!0},s=void 0,c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Class Overview",id:"class-overview",level:3},{value:"Initialization:",id:"initialization",level:3},{value:"Print Bitmap",id:"print-bitmap",level:2},{value:"Signature:",id:"signature",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Error Handling:",id:"error-handling",level:4},{value:"Example Usage:",id:"example-usage",level:3}];function p(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.h3,{id:"class-overview",children:"Class Overview"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"class PrinterConnector(context: Context)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"PrinterConnector"})," provides methods to interact with the printing service in the CorePOS system. The primary functionality includes sending bitmap images to be printed."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Manages printing operations, including printing bitmap images."]}),"\n",(0,t.jsx)(n.h3,{id:"initialization",children:"Initialization:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val printerConnector = PrinterConnector(context)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"print-bitmap",children:"Print Bitmap"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Sends a bitmap image to the CorePOS printer service for printing."]}),"\n",(0,t.jsx)(n.h3,{id:"signature",children:"Signature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"fun printBitmap(bitmap: Bitmap)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"bitmap"}),"(Bitmap): The image to be printed, in the form of a Bitmap object."]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns:"}),"\n",(0,t.jsx)(n.p,{children:"Void (Unit) No return value is provided. The operation is asynchronous, and a callback is triggered to indicate success or failure."}),"\n",(0,t.jsx)(n.h4,{id:"error-handling",children:"Error Handling:"}),"\n",(0,t.jsxs)(n.p,{children:["Returns ",(0,t.jsx)(n.code,{children:"null"})," on error."]}),"\n",(0,t.jsx)(n.h3,{id:"example-usage",children:"Example Usage:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'class ReceiptActivity : AppCompatActivity() {\r\n    private lateinit var printerConnector: PrinterConnector\r\n    \r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_receipt)\r\n        \r\n        printerConnector = PrinterConnector(this)\r\n    }\r\n    \r\n    fun printReceipt(bitmap: Bitmap) {\r\n        lifecycleScope.launch(Dispatchers.IO) {\r\n            try {\r\n                printerConnector.printBitmap(bitmap)\r\n                withContext(Dispatchers.Main) {\r\n                    showPrintSuccess()\r\n                }\r\n            } catch (e: Exception) {\r\n                Log.e("CorePOS", "Failed to print: ${e.message}")\r\n                withContext(Dispatchers.Main) {\r\n                    showPrintError(e.message)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var i=r(6540);const t={},o=i.createContext(t);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);