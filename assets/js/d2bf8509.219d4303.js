"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[8705],{1143:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"common-issues/common-issues-connecting","title":"Connection Issues","description":"Common connection-related errors and fixes.","source":"@site/versioned_docs/version-0.1.5/common-issues/connection-issues.md","sourceDirName":"common-issues","slug":"/common-issues/common-issues-connecting","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/common-issues/common-issues-connecting","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":1,"frontMatter":{"id":"common-issues-connecting","sidebar_position":1,"title":"Connection Issues","description":"Common connection-related errors and fixes.","pagination_prev":null,"hide_title":true},"sidebar":"tutorialSidebar","next":{"title":"Data Issues","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/common-issues/common-issues-data"}}');var i=s(4848),o=s(8453);const t={id:"common-issues-connecting",sidebar_position:1,title:"Connection Issues",description:"Common connection-related errors and fixes.",pagination_prev:null,hide_title:!0},c=void 0,l={},a=[{value:"Connection Issues",id:"connection-issues",level:2},{value:"Issue: &quot;Cannot call service methods from the main thread&quot;",id:"issue-cannot-call-service-methods-from-the-main-thread",level:3},{value:"Issue: &quot;Could not bind to Android service&quot;",id:"issue-could-not-bind-to-android-service",level:3},{value:"Issue: &quot;Permission denied&quot; errors",id:"issue-permission-denied-errors",level:3}];function d(n){const e={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"connection-issues",children:"Connection Issues"}),"\n",(0,i.jsx)(e.p,{children:"Troubleshooting guide for typical connection-related problems, including main thread calls, binding errors, and permission issues."}),"\n",(0,i.jsx)(e.admonition,{title:"Important Notes",type:"caution",children:(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"All SDK operations must be called from background threads"})}),"\n",(0,i.jsxs)(e.li,{children:["The SDK will throw ",(0,i.jsx)(e.code,{children:"IllegalStateException"})," if called from the main thread"]}),"\n",(0,i.jsxs)(e.li,{children:["Use ",(0,i.jsx)(e.code,{children:"lifecycleScope.launch(Dispatchers.IO)"})," for SDK operations"]}),"\n"]})}),"\n",(0,i.jsx)(e.h3,{id:"issue-cannot-call-service-methods-from-the-main-thread",children:'Issue: "Cannot call service methods from the main thread"'}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["App crashes with ",(0,i.jsx)(e.code,{children:"IllegalStateException"})]}),"\n",(0,i.jsx)(e.li,{children:'Error message: "Cannot call service methods from the main thread"'}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Cause:"}),"\r\nSDK methods are being called from the main/UI thread."]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Solution:"}),"\r\nAlways call SDK methods from a background thread:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",children:"// \u274c Wrong - Called from main thread\r\noverride fun onCreate(savedInstanceState: Bundle?) {\r\n    super.onCreate(savedInstanceState)\r\n    val items = inventoryConnector.getItems() // This will crash!\r\n}\r\n\r\n// \u2705 Correct - Called from background thread\r\noverride fun onCreate(savedInstanceState: Bundle?) {\r\n    super.onCreate(savedInstanceState)\r\n    lifecycleScope.launch(Dispatchers.IO) {\r\n        val items = inventoryConnector.getItems()\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"issue-could-not-bind-to-android-service",children:'Issue: "Could not bind to Android service"'}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"BindingException"})," thrown"]}),"\n",(0,i.jsx)(e.li,{children:'Error message: "Could not bind to Android service"'}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Causes:"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"CorePOS app not installed"}),"\n",(0,i.jsx)(e.li,{children:"CorePOS service not running"}),"\n",(0,i.jsx)(e.li,{children:"Incorrect package name configuration"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Check if CorePOS app is installed:"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",children:'private fun isCorePOSInstalled(): Boolean {\r\n    return try {\r\n        packageManager.getPackageInfo("com.csiworks.corepos", 0)\r\n        true\r\n    } catch (e: PackageManager.NameNotFoundException) {\r\n        false\r\n    }\r\n}\n'})}),"\n",(0,i.jsxs)(e.ol,{start:"2",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Verify package name configuration:"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",children:'// Check your build.gradle configuration\r\nandroid {\r\n    productFlavors {\r\n        prod {\r\n            buildConfigField "String", "COREPOS_PACKAGE", "\\"com.csiworks.corepos\\""\r\n        }\r\n        sandbox {\r\n            buildConfigField "String", "COREPOS_PACKAGE", "\\"com.csiworks.corepos.sandbox\\""\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,i.jsxs)(e.ol,{start:"3",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Implement retry logic:"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",children:"private suspend fun connectWithRetry(maxAttempts: Int = 3): Boolean {\r\n    repeat(maxAttempts) { attempt ->\r\n        try {\r\n            val merchant = merchantConnector.getMerchant()\r\n            return true\r\n        } catch (e: BindingException) {\r\n            if (attempt == maxAttempts - 1) throw e\r\n            delay(1000L * (attempt + 1)) // Exponential backoff\r\n        }\r\n    }\r\n    return false\r\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"issue-permission-denied-errors",children:'Issue: "Permission denied" errors'}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"PermissionDeniedException"})," thrown"]}),"\n",(0,i.jsx)(e.li,{children:'Error message: "Permission denied"'}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Causes:"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["Missing ",(0,i.jsx)(e.code,{children:"BIND_SERVICE"})," permission"]}),"\n",(0,i.jsx)(e.li,{children:"User denied permissions"}),"\n",(0,i.jsx)(e.li,{children:"App not authorized to access CorePOS"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Add required permissions to AndroidManifest.xml:"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-xml",children:'<uses-permission android:name="android.permission.BIND_SERVICE" />\r\n<uses-permission android:name="android.permission.INTERNET" />\n'})}),"\n",(0,i.jsxs)(e.ol,{start:"2",children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Request permissions at runtime:"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-kotlin",children:"private fun requestPermissions() {\r\n    if (ContextCompat.checkSelfPermission(this, \r\n        Manifest.permission.BIND_SERVICE) != PackageManager.PERMISSION_GRANTED) {\r\n        ActivityCompat.requestPermissions(this, \r\n            arrayOf(Manifest.permission.BIND_SERVICE), PERMISSION_REQUEST_CODE)\r\n    }\r\n}\r\n\r\noverride fun onRequestPermissionsResult(\r\n    requestCode: Int,\r\n    permissions: Array<out String>,\r\n    grantResults: IntArray\r\n) {\r\n    super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n    if (requestCode == PERMISSION_REQUEST_CODE) {\r\n        if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n            // Permission granted, proceed with SDK operations\r\n            initializeCorePOS()\r\n        } else {\r\n            // Permission denied, show explanation\r\n            showPermissionExplanationDialog()\r\n        }\r\n    }\r\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>c});var r=s(6540);const i={},o=r.createContext(i);function t(n){const e=r.useContext(o);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);