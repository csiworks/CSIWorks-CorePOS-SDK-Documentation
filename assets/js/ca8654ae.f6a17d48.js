"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[8664],{8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>s});var t=n(6540);const o={},a=t.createContext(o);function i(e){const r=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:r},e.children)}},9194:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api-reference/inventory-connector/inventory-api-save-category","title":"Save Category","description":"Creates a new category or updates an existing one.","source":"@site/versioned_docs/version-0.1.5/api-reference/inventory-connector/save-category.md","sourceDirName":"api-reference/inventory-connector","slug":"/api-reference/inventory-connector/inventory-api-save-category","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-save-category","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":11,"frontMatter":{"id":"inventory-api-save-category","sidebar_position":11,"title":"Save Category","description":"Creates a new category or updates an existing one.","hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"Delete Charge","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-delete-charge"},"next":{"title":"Delete Category","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-delete-category"}}');var o=n(4848),a=n(8453);const i={id:"inventory-api-save-category",sidebar_position:11,title:"Save Category",description:"Creates a new category or updates an existing one.",hide_title:!0},s=void 0,c={},l=[{value:"Save Category",id:"save-category",level:2},{value:"Signature:",id:"signature",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Error Handling:",id:"error-handling",level:4},{value:"Example Usage:",id:"example-usage",level:3},{value:"Best Practice with Repository Pattern:",id:"best-practice-with-repository-pattern",level:3}];function d(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"save-category",children:"Save Category"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Purpose:"})," Persist category data to the system."]}),"\n",(0,o.jsx)(r.h3,{id:"signature",children:"Signature:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-kotlin",children:"fun saveCategory(category: Category): Category?\n"})}),"\n",(0,o.jsx)(r.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"category"}),": ",(0,o.jsx)(r.a,{href:"../models/models-inventory#category",children:(0,o.jsx)(r.code,{children:"Category"})})," object to save."]}),"\n"]}),"\n",(0,o.jsx)(r.h4,{id:"returns",children:"Returns:"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"Category?"}),": The saved ",(0,o.jsx)(r.a,{href:"../models/models-inventory#category",children:(0,o.jsx)(r.code,{children:"Category"})})," with updated data (including generated ID for new categories), or ",(0,o.jsx)(r.code,{children:"null"})," if the operation fails."]}),"\n",(0,o.jsx)(r.h4,{id:"error-handling",children:"Error Handling:"}),"\n",(0,o.jsxs)(r.p,{children:["Returns ",(0,o.jsx)(r.code,{children:"null"})," on error."]}),"\n",(0,o.jsx)(r.h3,{id:"example-usage",children:"Example Usage:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-kotlin",children:'private fun createNewCategory(categoryName: String) {\r\n    lifecycleScope.launch(Dispatchers.IO) {\r\n        val newCategory = Category(\r\n            categoryId = null,\r\n            name = categoryName\r\n        )\r\n        \r\n        try {\r\n            val savedCategory = inventoryConnector.saveCategory(newCategory)\r\n            savedCategory?.let {\r\n                withContext(Dispatchers.Main) {\r\n                    showCategoryCreated(it)\r\n                    refreshCategoriesList()\r\n                }\r\n            }\r\n        } catch (e: Exception) {\r\n            Log.e("CorePOS", "Failed to save category: ${e.message}")\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,o.jsx)(r.h3,{id:"best-practice-with-repository-pattern",children:"Best Practice with Repository Pattern:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-kotlin",children:'interface InventoryRepository {\r\n    suspend fun saveCategory(category: Category): Category?\r\n}\r\n\r\nclass InventoryRepositoryImpl(\r\n    private val inventoryConnector: InventoryConnector\r\n) : InventoryRepository {\r\n    \r\n    override suspend fun saveCategory(category: Category): Category? {\r\n        return try {\r\n            inventoryConnector.saveCategory(category)\r\n        } catch (e: Exception) {\r\n            Log.e("InventoryRepo", "Failed to save category: ${e.message}")\r\n            null\r\n        }\r\n    }\r\n}\n'})})]})}function g(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);