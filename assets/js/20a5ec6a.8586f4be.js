"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[7412],{5536:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api-reference/order-connector/order-api-introduction","title":"Introduction","description":"Introduction of Order\u0421onnector.","source":"@site/versioned_docs/version-0.1.5/api-reference/order-connector/intro.md","sourceDirName":"api-reference/order-connector","slug":"/api-reference/order-connector/order-api-introduction","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/order-connector/order-api-introduction","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":1,"frontMatter":{"id":"order-api-introduction","sidebar_position":1,"title":"Introduction","description":"Introduction of Order\u0421onnector.","hide_title":true,"pagination_prev":null},"sidebar":"tutorialSidebar","next":{"title":"Get Order","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/order-connector/order-api-get-order"}}');var t=r(4848),d=r(8453);const o={id:"order-api-introduction",sidebar_position:1,title:"Introduction",description:"Introduction of Order\u0421onnector.",hide_title:!0,pagination_prev:null},c=void 0,s={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Class Overview",id:"class-overview",level:3},{value:"Initialization:",id:"initialization",level:3},{value:"Methods:",id:"methods",level:3}];function a(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(i.h3,{id:"class-overview",children:"Class Overview"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-kotlin",children:"class OrderConnector(context: Context)\n"})}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"OrderConnector"}),"provides methods to retrieve the active order, fetch an order by ID, add line items (variable price or per-unit), and delete line items in the CorePOS system. All methods are executed asynchronously and return results through callbacks."]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Purpose:"})," Manage order operations: fetch orders, add line items, and delete line items.\r\n",(0,t.jsx)(i.a,{href:"../../quick-start/quick-guide-examples#manage-orders",children:(0,t.jsx)(i.code,{children:"Quick Example:"})})," - Quick example of order managing"]}),"\n",(0,t.jsx)(i.h3,{id:"initialization",children:"Initialization:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-kotlin",children:"val orderConnector = OrderConnector(context)\n"})}),"\n",(0,t.jsx)(i.h3,{id:"methods",children:"Methods:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-get-order",children:(0,t.jsx)(i.code,{children:"Get Order"})})," - Retrieve a single order by its ID."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-get-active-order",children:(0,t.jsx)(i.code,{children:"Get Active Order"})})," - Retrieve the currently active order."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-add-variable-price-line-item",children:(0,t.jsx)(i.code,{children:"Add Variable-Price Line Item"})})," - Add a line item priced by explicit cash amount."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-add-per-unit-line-item",children:(0,t.jsx)(i.code,{children:"Add Per-Unit Line Item"})})," - Add a line item priced by unit and quantity."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-add-fixed-price-line-item",children:(0,t.jsx)(i.code,{children:"Add Fixed-Price Line Item"})})," - Add a single fixed-price line item."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-add-fixed-price-line-items",children:(0,t.jsx)(i.code,{children:"Add Fixed-Price Line Items"})})," - Add multiple fixed-price line items at once."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-delete-line-item",children:(0,t.jsx)(i.code,{children:"Delete Line Item"})})," - Remove a line item from an order."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-delete-line-items",children:(0,t.jsx)(i.code,{children:"Delete Line Items"})})," - Remove multiple line items from an order."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-update-line-item",children:(0,t.jsx)(i.code,{children:"Update Line Item"})})," - Update an existing line item in an order."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-update-line-items",children:(0,t.jsx)(i.code,{children:"Update Line Items"})})," - Update multiple line items in an order."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-add-line-item-discount",children:(0,t.jsx)(i.code,{children:"Add Line Item Discount"})})," - Add a discount to a specific line item."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-delete-line-item-discount",children:(0,t.jsx)(i.code,{children:"Delete Line Item Discount"})})," - Remove a specific discount from a line item."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"order-api-delete-line-item-discounts",children:(0,t.jsx)(i.code,{children:"Delete Line Item Discounts"})})," - Remove multiple discounts from a line item."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>o,x:()=>c});var n=r(6540);const t={},d=n.createContext(t);function o(e){const i=n.useContext(d);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(d.Provider,{value:i},e.children)}}}]);