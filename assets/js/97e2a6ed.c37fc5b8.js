"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[1468],{8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},9375:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api-reference/inventory-connector/inventory-api-save-item","title":"Save item","description":"Creates a new inventory item or updates an existing one.","source":"@site/versioned_docs/version-0.1.5/api-reference/inventory-connector/save-item.md","sourceDirName":"api-reference/inventory-connector","slug":"/api-reference/inventory-connector/inventory-api-save-item","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-save-item","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":4,"frontMatter":{"id":"inventory-api-save-item","sidebar_position":4,"title":"Save item","description":"Creates a new inventory item or updates an existing one.","hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"Get Items","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-get-items"},"next":{"title":"Delete item","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-delete-item"}}');var i=t(4848),o=t(8453);const s={id:"inventory-api-save-item",sidebar_position:4,title:"Save item",description:"Creates a new inventory item or updates an existing one.",hide_title:!0},a=void 0,c={},l=[{value:"Save Item",id:"save-item",level:2},{value:"Signature:",id:"signature",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Error Handling:",id:"error-handling",level:4},{value:"Example Usage:",id:"example-usage",level:3},{value:"Best Practice with Repository Pattern::",id:"best-practice-with-repository-pattern",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"save-item",children:"Save Item"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"})," Persist inventory item data to the system, including optional image attachment."]}),"\n",(0,i.jsx)(n.h3,{id:"signature",children:"Signature:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"fun saveItem(item: Item, imageUri: String?): Item?\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"item"}),": ",(0,i.jsx)(n.a,{href:"../models/models-inventory#item",children:(0,i.jsx)(n.code,{children:"Item"})}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"imageUri?"}),"(String, optional): URI path to item image"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Item?"}),": The saved ",(0,i.jsx)(n.a,{href:"../models/models-inventory#item",children:(0,i.jsx)(n.code,{children:"Item"})})," with updated data (including generated ID for new items), or ",(0,i.jsx)(n.code,{children:"null"})," if the operation fails."]}),"\n",(0,i.jsx)(n.h4,{id:"error-handling",children:"Error Handling:"}),"\n",(0,i.jsxs)(n.p,{children:["Returns ",(0,i.jsx)(n.code,{children:"null"})," on error."]}),"\n",(0,i.jsx)(n.h3,{id:"example-usage",children:"Example Usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'private fun createNewItem(item: Item, imageUri: String?) {\r\n    lifecycleScope.launch(Dispatchers.IO) {\r\n        try {\r\n            val savedItem = inventoryConnector.saveItem(newItem, imageUri)\r\n            \r\n            savedItem?.let {\r\n                withContext(Dispatchers.Main) {\r\n                    showItemCreated(it)\r\n                    refreshItemList()\r\n                }\r\n            }\r\n        } catch (e: Exception) {\r\n            Log.e("CorePOS", "Failed to save item: ${e.message}")\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"best-practice-with-repository-pattern",children:"Best Practice with Repository Pattern::"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'interface InventoryRepository {\r\n    suspend fun saveItem(item: Item, imageUri: String?): Item?\r\n}\r\n\r\nclass InventoryRepositoryImpl(\r\n    private val inventoryConnector: InventoryConnector\r\n) : InventoryRepository {\r\n    \r\n    override suspend fun saveItem(item: Item, imageUri: String?): Item? {\r\n        return try {\r\n            inventoryConnector.saveItem(item, imageUri)\r\n        } catch (e: Exception) {\r\n            Log.e("InventoryRepo", "Failed to save item: ${e.message}")\r\n            null\r\n        }\r\n    }\r\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);