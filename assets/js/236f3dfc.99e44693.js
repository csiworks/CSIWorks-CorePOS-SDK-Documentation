"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[9550],{3795:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"quick-start/quick-guide-core-concepts","title":"Core Concepts","description":"Core concepts and architechture.","source":"@site/versioned_docs/version-0.1.5/quick-start/core-concepts.md","sourceDirName":"quick-start","slug":"/quick-start/quick-guide-core-concepts","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/quick-start/quick-guide-core-concepts","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":1,"frontMatter":{"id":"quick-guide-core-concepts","sidebar_position":1,"title":"Core Concepts","description":"Core concepts and architechture.","pagination_prev":null,"hide_title":true},"sidebar":"tutorialSidebar","next":{"title":"Quick Examples","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/quick-start/quick-guide-examples"}}');var i=r(4848),s=r(8453);const c={id:"quick-guide-core-concepts",sidebar_position:1,title:"Core Concepts",description:"Core concepts and architechture.",pagination_prev:null,hide_title:!0},o=void 0,a={},l=[{value:"Core Concepts",id:"core-concepts",level:2},{value:"Important Notes",id:"important-notes",level:2},{value:"Threading",id:"threading",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Lifecycle Management",id:"lifecycle-management",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,i.jsxs)(n.p,{children:["First, ensure you have the SDK installed and configured as described in the ",(0,i.jsx)(n.a,{href:"../installation",children:"Installation Guide"}),".\r\nThe CorePOS SDK uses ",(0,i.jsx)(n.strong,{children:"connectors"})," to communicate with different POS services:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InventoryConnector"}),": Manage products and categories"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"OrderConnector"}),": Handle orders and line items"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MerchantConnector"}),": Access store information"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TenderConnector"}),": Manage payment methods"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PrinterConnector"}),": Print receipts"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,i.jsx)(n.p,{children:"A few very important notes on using the SDK's functionality to avoid many mistakes"}),"\n",(0,i.jsx)(n.h3,{id:"threading",children:"Threading"}),"\n",(0,i.jsxs)(n.p,{children:["All SDK operations ",(0,i.jsx)(n.strong,{children:"must"})," be called from a background thread. The SDK will throw an ",(0,i.jsx)(n.code,{children:"IllegalStateException"})," if called from the main thread."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"// \u2705 Correct - Background thread\r\nlifecycleScope.launch(Dispatchers.IO) {\r\n    val items = inventoryConnector.getItems()\r\n}\r\n\r\n// \u274c Wrong - Main thread\r\nval items = inventoryConnector.getItems() // This will crash!\n"})}),"\n",(0,i.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"Always wrap SDK calls in try-catch blocks:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"try {\r\n    val result = connector.someMethod()\r\n    // Handle success\r\n} catch (e: PermissionDeniedException) {\r\n    // Handle permission issues\r\n} catch (e: BindingException) {\r\n    // Handle service connection issues\r\n} catch (e: Exception) {\r\n    // Handle other errors\r\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"lifecycle-management",children:"Lifecycle Management"}),"\n",(0,i.jsx)(n.p,{children:"Store connectors as class properties and manage their lifecycle:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"class MyActivity : AppCompatActivity() {\r\n    private lateinit var inventoryConnector: InventoryConnector\r\n    \r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        inventoryConnector = InventoryConnector(this)\r\n    }\r\n    \r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        inventoryConnector.disconnect()\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"quick-guide-examples",children:"Quick Examples"})," - Check code snippets using the SDK"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"../api-reference",children:"API Reference"})," - Detailed API documentation"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"../best-practices/practices-error-handling",children:"Error Handling Guide"})," - Comprehensive error handling"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"../best-practices",children:"Best Practices"})," - Development guidelines"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var t=r(6540);const i={},s=t.createContext(i);function c(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);