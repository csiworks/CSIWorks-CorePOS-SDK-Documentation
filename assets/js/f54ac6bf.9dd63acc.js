"use strict";(self.webpackChunkcore_pos_sdk=self.webpackChunkcore_pos_sdk||[]).push([[7062],{3807:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api-reference/inventory-connector/inventory-api-delete-item","title":"Delete item","description":"Removes an inventory item from the system.","source":"@site/versioned_docs/version-0.1.5/api-reference/inventory-connector/delete-item.md","sourceDirName":"api-reference/inventory-connector","slug":"/api-reference/inventory-connector/inventory-api-delete-item","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-delete-item","draft":false,"unlisted":false,"tags":[],"version":"0.1.5","sidebarPosition":5,"frontMatter":{"id":"inventory-api-delete-item","sidebar_position":5,"title":"Delete item","description":"Removes an inventory item from the system.","hide_title":true},"sidebar":"tutorialSidebar","previous":{"title":"Save item","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-save-item"},"next":{"title":"Get Categories","permalink":"/CSIWorks-CorePOS-SDK-Documentation/0.1.5/api-reference/inventory-connector/inventory-api-get-categories"}}');var i=t(4848),o=t(8453);const s={id:"inventory-api-delete-item",sidebar_position:5,title:"Delete item",description:"Removes an inventory item from the system.",hide_title:!0},a=void 0,c={},l=[{value:"Delete Item",id:"delete-item",level:2},{value:"Signature:",id:"signature",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Error Handling:",id:"error-handling",level:4},{value:"Example Usage:",id:"example-usage",level:3},{value:"Best Practice with Repository Pattern::",id:"best-practice-with-repository-pattern",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"delete-item",children:"Delete Item"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"})," Permanently delete an inventory item by its ID."]}),"\n",(0,i.jsx)(n.h3,{id:"signature",children:"Signature:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"fun deleteItem(itemId: String)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"itemId"})," (String): Unique ",(0,i.jsx)(n.strong,{children:"UUID"})," identifier of the item to retrieve"]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns:"}),"\n",(0,i.jsx)(n.p,{children:"Void (Unit) No return value is provided. The operation is asynchronous, and a callback is triggered to indicate success or failure."}),"\n",(0,i.jsx)(n.h4,{id:"error-handling",children:"Error Handling:"}),"\n",(0,i.jsx)(n.p,{children:"Triggers error callback on failure."}),"\n",(0,i.jsx)(n.h3,{id:"example-usage",children:"Example Usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'private fun deleteItem(itemId: String) {\r\n    lifecycleScope.launch(Dispatchers.IO) {\r\n        try {\r\n            inventoryConnector.deleteItem(itemId)\r\n            withContext(Dispatchers.Main) {\r\n                showItemDeleted()\r\n                refreshItemList()\r\n            }\r\n        } catch (e: Exception) {\r\n            Log.e("CorePOS", "Failed to delete item: ${e.message}")\r\n            withContext(Dispatchers.Main) {\r\n                showDeleteError()\r\n             }\r\n        }   \r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"best-practice-with-repository-pattern",children:"Best Practice with Repository Pattern::"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'interface InventoryRepository {\r\n    suspend fun deleteItem(itemId: String)\r\n}\r\n\r\nclass InventoryRepositoryImpl(\r\n    private val inventoryConnector: InventoryConnector\r\n) : InventoryRepository {\r\n    \r\n    override suspend fun deleteItem(itemId: String): Boolean {\r\n        return try {\r\n            inventoryConnector.deleteItem(itemId)\r\n            true\r\n        } catch (e: Exception) {\r\n            Log.e("InventoryRepo", "Failed to delete item: ${e.message}")\r\n            false\r\n        }\r\n    }\r\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);